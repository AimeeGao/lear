apiVersion: v1
kind: ReplicationController
metadata:  
  labels:
    app: nats-streaming
    openshift.io/deployment-config.name: nats-streaming
  name: nats-streaming-6
  namespace: fsxqpf-prod  
spec:
  replicas: 3
  selector:
    app: nats-streaming
    deployment: nats-streaming-6
    deploymentconfig: nats-streaming
  template:
    metadata:
      annotations:
        openshift.io/deployment-config.latest-version: '6'
        openshift.io/deployment-config.name: nats-streaming
        openshift.io/deployment.name: nats-streaming-6
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: nats-streaming
        deployment: nats-streaming-6
        deploymentconfig: nats-streaming
    spec:
      containers:
        - args:
            - '-m'
            - '8222'
            - '-store'
            - SQL
            - '-sql_driver'
            - postgres
            - '-sql_source'
            - 'postgresql://@postgresql-nats-dev:5432/nats-db?sslmode=disable'
            - '-clustered'
            - '-cluster_log_path'
            - /mnt/natsdata/
            - '-cid'
            - queuenet
            - '-cluster_bootstrap'
          env:
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRESQL_USER
                  name: nats-db
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRESQL_PASSWORD
                  name: nats-db
            - name: PG_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: POSTGRESQL_DATABASE_NAME
                  name: nats-db
          image: >-
            docker-registry.default.svc:5000/gl2uos-tools/nats-streaming@sha256:44adaec0bdce272f7aadafe0869c1108c2109e244e55e295124f01bf438822b9
          imagePullPolicy: Always
          name: nats-streaming
          ports:
            - containerPort: 4222
              protocol: TCP
            - containerPort: 8222
              protocol: TCP
          resources: {}
          terminationMessagePath: /test/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /mnt/natsdata
              name: volume-3cktx
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: volume-3cktx
          persistentVolumeClaim:
            claimName: cluster-log-path
