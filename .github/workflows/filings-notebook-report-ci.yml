name: Filings Notebook Report Job CI

on:
  pull_request:
    types: [assigned, synchronize]
    paths:
      - "jobs/filings-notebook-report/**"

defaults:
  run:
    shell: bash
    working-directory: ./jobs/filings-notebook-report

jobs:
  setup-job:
    runs-on: ubuntu-20.04

    if: github.repository == 'bcgov/lear'

    steps:
      - uses: actions/checkout@v2
      - run: "true"

  linting:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Lint with pylint
        id: pylint
        run: |
          make pylint
      - name: Lint with flake8
        id: flake8
        run: |
          make flake8

  testing:
    needs: setup-job
    env:
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DB_NAME: lear
      PG_HOST: localhost
      PG_PORT: 5432
      APP_FILE: notebookreport.py
      INCORPORATION_FILINGS_DAILY_REPORT_RECIPIENTS: [steven.chen@gov.bc.ca]
      COOP_FILINGS_MONTHLY_REPORT_RECIPIENTS: [steven.chen@gov.bc.ca]
      COOPERATIVE_MONTHLY_REPORT_RECIPIENTS: [steven.chen@gov.bc.ca]
      BC_STATS_MONTHLY_REPORT_RECIPIENTS: [steven.chen@gov.bc.ca]
      EMAIL_SMTP: apps.smtp.gov.bc.ca
      ENVIRONMENT: devl
      ERROR_EMAIL_RECIPIENTS: [steven.chen@gov.bc.ca]
      MONTH_REPORT_DATES: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
      RETRY_INTERVAL: 30
      RETRY_TIMES: 3
      SENDER_EMAIL: lear@noreply.github.com
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Test with pytest
        id: test
        run: |
           make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./queue_services/entity-pay/coverage.xml
          flags: entitypay
          name: codecov-entity-pay
          fail_ci_if_error: true

  build-check:
    needs: setup-job
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: build to check strictness
        id: build
        run: |
          make build-nc
